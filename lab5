#include <stdio.h>
#define MAX 100
struct infix
{
    int arr[MAX];
    int top;
}s;

void push(char ele)
{
 s.arr[++s.top]=ele;
}

char pop()
{
    return s.arr[s.top--];
}

void conv(char infix[])
{
char pfix[MAX];
int k=0;
int i=0;
char ele;
while(infix[i]!='\0')
{
    char c=infix[i];
    switch(c)
    {
        case'(':
        push(c);
        break;
        case ')':
        while((ele=pop())!='(')
        {
          pfix[k++]=ele;
        }
        break;
        case'+':
        case'-':
        case'/':
        case'*':
        if(isempty())
        push(c);
        else
        {
            int prec=precedence(c);
            ele=pop();
            while(prec<=precedence(ele))
            {
            pfix[k++]=ele;
            if(!isempty())
            ele=pop();
            else
            break;
            }
            if(prec>precedence(ele))
                push(ele);
                push(c);
        }
        break;
      default:
      pfix[k++]=c;
      break;
    }
    i++;
}
while(!isempty())
{
    pfix[k++]=pop();
}
pfix[k]='\0';
printf("%s",pfix);
}

int isempty()
{
    if(s.top==-1)
    return 1;
    else
    return 0;
}

int precedence(int ch)//wtf ch should be char
{
switch(ch)
{
case'(':
        return 1;
        break;
case'+':
case'-':
        return 2;
        break;
case'*':
case'/':
        return 3;
        break;
}
return 0;
}

void main()
{
s.top=-1;
char infix[MAX];
printf("enter infix expression\n");
scanf("%s",infix);
conv(infix);
}
